alias: Voice - Play using Music Assistant
description: >
  This script is used to play music based on a voice request. The tool takes the
  following arguments: media_type, artist, album, media_id, radio_mode, area.
  media_id and media_type are always required and must always be supplied as
  arguments to this tool. Use the paramters as described in the description of
  each parameter. Use this tool whenever the user requests to play music.
mode: parallel
max_exceeded: silent
fields:
  media_type:
    selector:
      select:
        options:
          - track
          - album
          - artist
          - playlist
          - radio
    name: Media Type
    description: |
      This argument is mandatory and must always be provided no matter what!
      "media_type" can only be one of 5 different values:
      - "track" if the search is about a specific track or a list of tracks.
      - "album" if the search is about an album or a list of albums.
      - "artist" if the search is about an artist.
      - "playlist" if the search specifically requests a playlist.
      - "radio" in case the search is a radio channel.
      media_type is mandatory and must always be provided.  In case a request 
      doesn't match any of these types, for example when music from a specific 
      genre is requested, then us "track" and provide a list of matching songs 
      for the "media_id" parameter.
    required: true
  artist:
    selector:
      text:
    name: Artist
    description: >
      "artist" is the artist the user requests to play, or the artist of a
      specific track if the user mentions it while requesting to play a specific
      song. In case the artist is unknown or there are multiple artists
      requested, use an empty string.
    required: true
  album:
    selector:
      text:
    name: Album
    description: >
      "album" is the album the user requests to play, or the album a specific
      track is from if the user mentions it when requesting to play a specific
      song.  In case the album is unknown or there are multiple albums
      requested, use an empty string.
    required: true
  media_id:
    selector:
      text:
    name: Media ID
    description: |
      This argument is mandatory and must always be provided no matter what!

      media_id is the most specific from track, album, and artist.  "track" and

      "artist" can be a single value or multiple values.

      - If the search is about a track: Then media_id is the track name or a list of 
        track names (use a semicolon as seperator). 
        In case there are multiple artists in the result, use both the artist name and song name 
        separated by a dash as track name (example: "Artist name - Song name"). 
        In case all songs are from the same artist, use the artist for the "artist" parameter, 
        and only use the song names as track name.
        
      - If the search is about an album: Then media_id is the album name or a list of 
        album names (use a semicolon as seperator).
        
      - If the search is about an artist: Then media_id is the artist name.

      - If the search is a specific playlist: Then media_id is the requested
      playlist. 

      - If the search is a radio channel: Then media_id is the requested
      channel.

      This is a mandatory argument and must always be provided.
    required: true
  radio_mode:
    selector:
      boolean:
    name: Radio Mode
    description: >
      True or false value thst determines if we set radio mode. If the user asks
      to use radio mode with their request, then this parameter us true.
      Otherwise it is false.
    required: true
  area:
    selector:
      area:
        entity:
          integration: music_assistant
    name: Area
    description: >
      The area for which the music is requested In case no area is provided, use
      the area the request comes from.
    required: true
sequence:
  - alias: Play music using Music Assistant
    action: music_assistant.play_media
    data: |
      {{
        dict(
          dict(
                media_id=media_id.split(';') | map('trim') | list if ';' in media_id else media_id,
                media_type=media_type,
                artist=artist | default,
                album=album | default,
                radio_mode=radio_mode| default
              ).items() | selectattr('1')
          )
      }}
    target:
      area_id: "{{ area }}"
