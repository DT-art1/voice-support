blueprint:
  domain: automation
  name: Music Assistant - (alleen) Lokale Voice Support Blueprint
  source_url: https://github.com/music-assistant/voice-support/blob/main/local-assist-blueprint/mass_assist_blueprint_nl.yaml
  description: '
    ![Image](https://github.com/music-assistant/voice-support/blob/main/assets/music-assistant.png?raw=true)

    # Media afspelen met spraakopdrachten

    ### Gebruik

    Alle spraakopdrachten moeten:

    * beginnen met de woorden `Speel` of `Luister naar` gevolgd door het type media `artiest/nummer/lied(je)/album/playlist/afspeellijst/radio station` en dan de naam van hetgeen afgespeeld moet worden

    * in geval van een album of nummer kan dit optioneel gevolgd worden door `van/door (de) artiest` en dan de artiest naam

    * vervolgens kan er ook nog optioneel de naam van een area of Music Assistant media player toegevoegd worden

    * daarna, in het geval van artiest, nummer, album of playlist, kan dit optioneel nog opgevolgd worden met `met radio modus aan`

    #### Geaccepteerde varianten

    Sommige woorden hebben nog varianten die ook geaccepteerd worden, en de woorden `de` en `het` zijn optioneel.

    #### Voorbeelden

    ```

    Speel de artiest Pink Floyd in de keuken

    Luister naar album Jagged Little Pill in het kantoor

    Luister naar het album Greatest Hits van de artiest James Taylor in de keuken

    Speel track New Years Day in the bedroom

    Play nummer New Years Day op de zolder met radio modus aan

    Speel het nummer A Hard Days Night van Billy Joel in the bedroom

    Luister naar de playlist Classic Rock in het kantoor

    Luister naar het radio station BBC Radio 1 in de slaapkamer

    Speel album Classical Nights op de Slaapkamer Sonos Speaker

    Luister naar the record Classical Nights op de Slaapkamer Sonos Speaker

    Speel de band U2

    ```
  '
  input:
    default_player_entity_id_input:
      name: Default Media Player
      selector:
        entity:
          filter:
            integration: music_assistant
            domain: media_player


triggers:
  - trigger: conversation
    command:
      - "(speel|luister naar) [de |het ](album|ep|plaat|compilatie|single) {media_name} [by [de| het ](artist|band|group) {artist}] [(in|op|door|met) [de| het ]{area_or_player_name}][ met {radio_mode} aan]"
    id: album
  - trigger: conversation
    command:
      - "(speel|luister naar) [de| het ](track|nummer|lied[je]) {media_name} [by [de| het ](artist|band|group) {artist}] [(in|op|door|met) [de| het ]{area_or_player_name}][ met {radio_mode} aan]"
    id: track
  - trigger: conversation
    command:
      - "(speel|luister naar) [de| het ](artist|band|group) {media_name} [(in|op|door|met) [de| het ]{area_or_player_name}][ met {radio_mode} aan]"
    id: artist
  - trigger: conversation
    command:
      - "(speel|luister naar) [de| het ]((radio station)|(radio)|(station)) {media_name} [(in|op|door|met) [de| het ]{area_or_player_name}]"
    id: radio
  - trigger: conversation
    command:
      - "(speel|luister naar) [de| het ]playlist {media_name} [(in|op|door|met) [de| het ]{area_or_player_name}][ met {radio_mode} aan]"
    id: playlist
conditions: []
actions:
  - variables:
      version: 20250128
      default_player_entity_id: !input default_player_entity_id_input
      trigger_id: "{{ trigger.id }}"
      area_or_player_name: "{{ trigger.slots.area_or_player_name | default }}"
      assist_device_id: "{{ trigger.device_id }}"
      action_data:
        media_id: "{{ trigger.slots.media_name }}"
        media_type: "{{ 'radio' if 'radio' in media_name | lower else trigger_id }}"
        artist: "{{ trigger.slots.artist | default }}"
        radio_mode: "{{ 'radio' in trigger.slots.radio_mode | default | lower }}"
      player_entity_id_by_player_name: >
        {{ integration_entities('music_assistant') | expand 
          | selectattr('name', 'match', area_or_player_name ~ '$', ignorecase=true)
          | map(attribute='entity_id') | list }}
      player_entity_id_by_area_name: >
        {{ areas() | map('area_name') | select('match', area_or_player_name ~ '$', 
        ignorecase=true) | map('area_entities') | sum(start=[]) | select('in', 
        integration_entities('music_assistant')) | list }}
      player_entity_id_by_assist_area: >
        {{ area_entities(area_id(trigger.device_id))
        | select('in', integration_entities('music_assistant')) | list }}
      mass_player_entity_id: |
        {{ player_entity_id_by_player_name or player_entity_id_by_area_name 
        or player_entity_id_by_assist_area or [default_player_entity_id] }}
      mass_player_name: "{{ mass_player_entity_id | map('state_attr', 'friendly_name') | join(', ') }}"
  - alias: Send media to selected Music Assistant Player
    action: music_assistant.play_media
    data: "{{ dict(action_data.items() | selectattr('1')) }}"
    target:
      entity_id: "{{ mass_player_entity_id }}"
  - set_conversation_response: "{{ trigger.slots.media_name }} wordt afgespeeld op {{ mass_player_name }}"
mode: single
